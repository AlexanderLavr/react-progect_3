{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nexport function* doRegistration(some) {\n  // yield takeEvery(`ADD_OBJ`, function*(action: any) {\n  try {\n    //1st step\n    //2nd step\n    yield put({\n      type: 'ADD_OBJ',\n      obj: some\n    });\n  } catch (error) {\n    yield put({\n      type: 'FETCH_FAILED',\n      error\n    });\n  } // yield takeEvery(`ADD_OBJ`, function*(action: any) {\n  //     try {\n  //       // if (needDelay) {\n  //       //   yield call(delay, 500);\n  //       // }\n  //       //const docs = yield call(Api.fetchData, url);\n  //       const {\n  //         data: { email, password }\n  //       } = action;\n  //       console.log(email + password);\n  //       yield put({\n  //         type: `ADD_OBJ`,\n  //         payload: {\n  //           data: \"token\"\n  //         }\n  //       });\n  //     } catch (error) {\n  //       yield put({\n  //         type: `@@login/LOGIN_FAILED`,\n  //         payload: {\n  //           error: error.message\n  //         }\n  //       });\n  //     }\n  //   });\n\n}","map":{"version":3,"sources":["C:\\Users\\Anuitex-105\\Desktop\\New_progect\\src\\redux\\regestration\\sagasRegestration.ts"],"names":["put","doRegistration","some","type","obj","error"],"mappings":"AAAA,SAAeA,GAAf,QAAqC,oBAArC;AAIA,OAAO,UAAUC,cAAV,CAAyBC,IAAzB,EAAyD;AAC5D;AACI,MAAI;AACA;AAEA;AACA,UAAMF,GAAG,CAAC;AAACG,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAEF;AAAvB,KAAD,CAAT;AACH,GALD,CAKE,OAAMG,KAAN,EAAa;AACX,UAAML,GAAG,CAAC;AAACG,MAAAA,IAAI,EAAE,cAAP;AAAuBE,MAAAA;AAAvB,KAAD,CAAT;AACH,GATuD,CAUxD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACP","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport registerUser from '../../components/regestration'\r\n\r\n\r\nexport function* doRegistration(some:any): IterableIterator<any>{\r\n    // yield takeEvery(`ADD_OBJ`, function*(action: any) {\r\n        try {\r\n            //1st step\r\n          \r\n            //2nd step\r\n            yield put({type: 'ADD_OBJ', obj: some});\r\n        } catch(error) {\r\n            yield put({type: 'FETCH_FAILED', error});\r\n        }\r\n        // yield takeEvery(`ADD_OBJ`, function*(action: any) {\r\n        //     try {\r\n        //       // if (needDelay) {\r\n        //       //   yield call(delay, 500);\r\n        //       // }\r\n        \r\n        //       //const docs = yield call(Api.fetchData, url);\r\n        //       const {\r\n        //         data: { email, password }\r\n        //       } = action;\r\n        \r\n        //       console.log(email + password);\r\n        \r\n        //       yield put({\r\n        //         type: `ADD_OBJ`,\r\n        //         payload: {\r\n        //           data: \"token\"\r\n        //         }\r\n        //       });\r\n        //     } catch (error) {\r\n        //       yield put({\r\n        //         type: `@@login/LOGIN_FAILED`,\r\n        //         payload: {\r\n        //           error: error.message\r\n        //         }\r\n        //       });\r\n        //     }\r\n        //   });\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
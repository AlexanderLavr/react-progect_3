{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from './rootReduser';\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { doRegistration } from \"./regestration/sagasRegestration\";\nexport default function configStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const composeEnhancers = composeWithDevTools({});\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, initialState, enhancer);\n  let m = module;\n\n  if (m.hot) {\n    m.hot.accept(\"./rootReduser\", () => {\n      const nextRootReducer = require(\"./rootReduser\").default;\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  sagaMiddleware.run(function* () {\n    yield all([doRegistration()]);\n  });\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\Anuitex-105\\Desktop\\New_progect\\src\\redux\\store.tsx"],"names":["createStore","applyMiddleware","rootReducer","createSagaMiddleware","composeWithDevTools","doRegistration","configStore","initialState","sagaMiddleware","middlewares","composeEnhancers","enhancer","store","m","module","hot","accept","nextRootReducer","require","default","replaceReducer","run","all"],"mappings":"AAAA,SAAgBA,WAAhB,EAA6BC,eAA7B,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,kCAA/B;AAKA,eAAe,SAASC,WAAT,CAAqBC,YAArB,EAA2C;AACtD,QAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,QAAMM,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,QAAME,gBAAgB,GAAGN,mBAAmB,CAAC,EAAD,CAA5C;AAEA,QAAMO,QAAQ,GAAGD,gBAAgB,CAACT,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAAjC;AAEA,QAAMG,KAAK,GAAGZ,WAAW,CAACE,WAAD,EAAcK,YAAd,EAA6BI,QAA7B,CAAzB;AAEA,MAAIE,CAAC,GAAGC,MAAR;;AAEA,MAAID,CAAC,CAACE,GAAN,EAAW;AACTF,IAAAA,CAAC,CAACE,GAAF,CAAMC,MAAN,CAAa,eAAb,EAA8B,MAAM;AAClC,YAAMC,eAAe,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,OAAjD;;AACAP,MAAAA,KAAK,CAACQ,cAAN,CAAqBH,eAArB;AACD,KAHD;AAID;;AAGDT,EAAAA,cAAc,CAACa,GAAf,CAAmB,aAAY;AAC3B,UAAMC,GAAG,CAAC,CAACjB,cAAc,EAAf,CAAD,CAAT;AACH,GAFD;AAGA,SAAOO,KAAP;AACH","sourcesContent":["import { Store, createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from './rootReduser';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { doRegistration } from \"./regestration/sagasRegestration\";\r\nimport { dologin } from \"./login/\";\r\n\r\n\r\n\r\nexport default function configStore(initialState?:any):any{\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n  \r\n    const composeEnhancers = composeWithDevTools({});\r\n  \r\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n  \r\n    const store = createStore(rootReducer, initialState!, enhancer);\r\n  \r\n    let m = module as any;\r\n\r\n    if (m.hot) {\r\n      m.hot.accept(\"./rootReduser\", () => {\r\n        const nextRootReducer = require(\"./rootReduser\").default;\r\n        store.replaceReducer(nextRootReducer);\r\n      });\r\n    }\r\n\r\n\r\n    sagaMiddleware.run(function*() {\r\n        yield all([doRegistration()]);\r\n    });\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}
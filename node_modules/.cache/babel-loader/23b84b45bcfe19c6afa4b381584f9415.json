{"ast":null,"code":"import { createStore } from 'redux';\nimport rootReducer from './rootReduser';\nexport default function configStore() {\n  // const sagaMiddleware = createSagaMiddleware();\n  // const middlewares = [sagaMiddleware];\n  const composeEnhancers = composeWithDevTools({});\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept(\"@redux/rootReducer\", () => {\n      const nextRootReducer = require(\"@redux/rootReducer\").default;\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:\\Users\\Anuitex-105\\Desktop\\New_progect\\src\\redux\\store.tsx"],"names":["createStore","rootReducer","configStore","composeEnhancers","composeWithDevTools","enhancer","applyMiddleware","middlewares","store","initialState","module","hot","accept","nextRootReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,eAAe,SAASC,WAAT,GAA0B;AACrC;AACA;AAEA,QAAMC,gBAAgB,GAAGC,mBAAmB,CAAC,EAAD,CAA5C;AAEA,QAAMC,QAAQ,GAAGF,gBAAgB,CAACG,eAAe,CAAC,GAAGC,WAAJ,CAAhB,CAAjC;AAEA,QAAMC,KAAK,GAAGR,WAAW,CAACC,WAAD,EAAcQ,YAAd,EAA6BJ,QAA7B,CAAzB;;AAEA,MAAIK,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,oBAAlB,EAAwC,MAAM;AAC5C,YAAMC,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,OAAtD;;AACAP,MAAAA,KAAK,CAACQ,cAAN,CAAqBH,eAArB;AACD,KAHD;AAID;;AACD,SAAOL,KAAP;AACH","sourcesContent":["import { createStore } from 'redux';\r\nimport rootReducer from './rootReduser';\r\n\r\n\r\nexport default function configStore():any{\r\n    // const sagaMiddleware = createSagaMiddleware();\r\n    // const middlewares = [sagaMiddleware];\r\n  \r\n    const composeEnhancers = composeWithDevTools({});\r\n  \r\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n  \r\n    const store = createStore(rootReducer, initialState!, enhancer);\r\n  \r\n    if (module.hot) {\r\n      module.hot.accept(\"@redux/rootReducer\", () => {\r\n        const nextRootReducer = require(\"@redux/rootReducer\").default;\r\n        store.replaceReducer(nextRootReducer);\r\n      });\r\n    }\r\n    return store\r\n}"]},"metadata":{},"sourceType":"module"}
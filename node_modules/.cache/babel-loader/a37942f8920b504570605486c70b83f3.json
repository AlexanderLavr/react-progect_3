{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anuitex-105\\\\Desktop\\\\New_progect\\\\src\\\\components\\\\regectration.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport default class RegistrationComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstname: '',\n      secondname: '',\n      email: '',\n      password: '',\n      errorFirstname: '',\n      errorSecondname: '',\n      errorEmail: '',\n      errorPassword: ''\n    };\n\n    this.submitRegistration = () => {\n      const inpRegExpr = new RegExp(/[a-zA-Z]{3,}/i);\n      const passWordExpr = new RegExp(/[a-zA-Z0-9]{3,}/i);\n      const emailRegExpr = new RegExp(/^[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-/\\s.]?[0-9]{4}$/);\n      console.log(JSON.stringify(this.state));\n      let stateValid = false;\n\n      if (!inpRegExpr.test(this.state.firstname)) {\n        this.setState({\n          errorFirstname: 'Error: только буквы латинского алфавита не менее 3-х'\n        });\n        return;\n      }\n\n      if (!inpRegExpr.test(this.state.secondname)) {\n        this.setState({\n          errorSecondname: 'Error: только буквы латинского алфавита не менее 3-х'\n        });\n        return;\n      }\n\n      if (!emailRegExpr.test(this.state.email)) {\n        this.setState({\n          errorEmail: 'Error: uncorrectEmail value!'\n        });\n        return;\n      }\n\n      if (!passWordExpr.test(this.state.password)) {\n        this.setState({\n          errorPassword: 'Error: допустимы буквы латинского алфавита и цифры не менее 3-х'\n        });\n        return;\n      }\n\n      if (stateValid) {\n        fetch('http://localhost:3000/users', {\n          method: 'POST',\n          body: JSON.stringify(this.state),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        });\n      }\n\n      fetch('http://localhost:3000/users', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }); // setTimeout(()=>{\n      //     fetch('http://localhost:3000/users')\n      //     .then(response => response.json())\n      //     .then(result =>{\n      //         console.log(result)\n      // })\n      // }, 1000)\n    };\n\n    this.handle = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state.firstname);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"containerRegestration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"conteiner-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item-firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstname-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"FirstName:\"), React.createElement(\"div\", {\n      className: \"firstname-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstname\",\n      onChange: this.handle,\n      value: this.state.firstname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.errorFirstname), React.createElement(\"div\", {\n      className: \"item-secondname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"secondname-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"SecondName:\"), React.createElement(\"div\", {\n      className: \"secondname-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"secondname\",\n      onChange: this.handle,\n      value: this.state.secondname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.errorFirstname), React.createElement(\"div\", {\n      className: \"item-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"email-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"div\", {\n      className: \"email-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handle,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.errorFirstname), React.createElement(\"div\", {\n      className: \"item-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"password-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"div\", {\n      className: \"password-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handle,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.errorFirstname), React.createElement(\"div\", {\n      className: \"item-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.submitRegistration(),\n      id: \"submit-registr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Registration\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\u041D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Anuitex-105\\Desktop\\New_progect\\src\\components\\regectration.tsx"],"names":["React","Link","RegistrationComponent","Component","state","firstname","secondname","email","password","errorFirstname","errorSecondname","errorEmail","errorPassword","submitRegistration","inpRegExpr","RegExp","passWordExpr","emailRegExpr","console","log","JSON","stringify","stateValid","test","setState","fetch","method","body","headers","handle","event","target","name","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class RegistrationComponent extends React.Component{\r\n    state:any = {\r\n        firstname: '',\r\n        secondname: '',\r\n        email: '',\r\n        password: '',\r\n        errorFirstname: '',\r\n        errorSecondname: '',\r\n        errorEmail: '',\r\n        errorPassword: ''\r\n    }\r\n    \r\n    submitRegistration = ()=>{\r\n        const inpRegExpr = new RegExp(/[a-zA-Z]{3,}/i);\r\n        const passWordExpr = new RegExp(/[a-zA-Z0-9]{3,}/i);\r\n        const emailRegExpr = new RegExp(/^[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-/\\s.]?[0-9]{4}$/);\r\n        console.log(JSON.stringify(this.state)) \r\n        let stateValid = false;\r\n        if(!inpRegExpr.test(this.state.firstname)){\r\n            this.setState({errorFirstname: 'Error: только буквы латинского алфавита не менее 3-х'} as any)\r\n            return\r\n        }\r\n        if(!inpRegExpr.test(this.state.secondname)){\r\n            this.setState({errorSecondname: 'Error: только буквы латинского алфавита не менее 3-х'} as any)\r\n            return\r\n        }\r\n        if(!emailRegExpr.test(this.state.email)){\r\n            this.setState({errorEmail: 'Error: uncorrectEmail value!'} as any)\r\n            return\r\n        }\r\n        if(!passWordExpr.test(this.state.password)){\r\n            this.setState({errorPassword: 'Error: допустимы буквы латинского алфавита и цифры не менее 3-х'} as any)\r\n            return\r\n        }\r\n        \r\n\r\n        if(stateValid){\r\n            fetch ('http://localhost:3000/users',{\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state),\r\n                headers:{\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            })\r\n        }\r\n\r\n        fetch ('http://localhost:3000/users',{\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        })\r\n\r\n        // setTimeout(()=>{\r\n        //     fetch('http://localhost:3000/users')\r\n        //     .then(response => response.json())\r\n        //     .then(result =>{\r\n        //         console.log(result)\r\n        // })\r\n        // }, 1000)\r\n      \r\n    }\r\n   \r\n    handle = (event:any)=>{\r\n            this.setState({[event.target.name]:event.target.value} as any)\r\n        console.log(this.state.firstname)\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"containerRegestration\">\r\n                <div className=\"conteiner-form\">\r\n                    <form>\r\n                        <div className=\"item-firstname\">\r\n                            <div className=\"firstname-left\">FirstName:</div>\r\n                            <div className=\"firstname-right\">\r\n                                <input type=\"text\" name=\"firstname\" onChange = {this.handle} value={this.state.firstname} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{this.state.errorFirstname}</div>\r\n                        <div className=\"item-secondname\">\r\n                            <div className=\"secondname-left\">SecondName:</div>\r\n                            <div className=\"secondname-right\">\r\n                                <input type=\"text\" name=\"secondname\" onChange = {this.handle} value={this.state.secondname}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{this.state.errorFirstname}</div>\r\n                        <div className=\"item-email\">\r\n                            <div className=\"email-left\">Email:</div>\r\n                            <div className=\"email-right\">\r\n                                <input type=\"email\" name=\"email\" onChange = {this.handle} value={this.state.email}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{this.state.errorFirstname}</div>\r\n                        <div className=\"item-password\">\r\n                            <div className=\"password-left\">Password:</div>\r\n                            <div className=\"password-right\">\r\n                                <input type=\"password\" name=\"password\" onChange = {this.handle} value={this.state.password}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"error\">{this.state.errorFirstname}</div>\r\n                        <div className=\"item-button\">\r\n                            <button onClick={() => this.submitRegistration()} id=\"submit-registr\">Registration</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/\">На главную</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nexport function* doRegistration(action) {\n  try {\n    //1st step\n    //2nd step\n    yield put({\n      type: 'ADD_OBJ',\n      obj: {\n        email: action\n      }\n    });\n  } catch (error) {\n    yield put({\n      type: 'FETCH_FAILED',\n      error\n    });\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Anuitex-105\\Desktop\\New_progect\\src\\redux\\regestration\\sagasRegestration.ts"],"names":["put","doRegistration","action","type","obj","email","error"],"mappings":"AAAA,SAAeA,GAAf,QAAqC,oBAArC;AAIA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAA4D;AAC/D,MAAI;AACA;AAEA;AACC,UAAMF,GAAG,CAAC;AAACG,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE;AAACC,QAAAA,KAAK,EAAEH;AAAR;AAAvB,KAAD,CAAT;AACD,GALJ,CAKK,OAAMI,KAAN,EAAa;AACb,UAAMN,GAAG,CAAC;AAACG,MAAAA,IAAI,EAAE,cAAP;AAAuBG,MAAAA;AAAvB,KAAD,CAAT;AACJ;AACJ","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport registerUser from '../../components/regestration'\r\n\r\n\r\nexport function* doRegistration(action: any): IterableIterator<any>{\r\n    try {\r\n        //1st step\r\n       \r\n        //2nd step\r\n         yield put({type: 'ADD_OBJ', obj: {email: action}});\r\n       } catch(error) {\r\n         yield put({type: 'FETCH_FAILED', error});\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}